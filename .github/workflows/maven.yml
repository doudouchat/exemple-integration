name: build
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      branch_service:
        description: 'Service branch'
        required: true
        default: 'master'
      branch_authorization:
        description: 'Authorization branch'
        required: true
        default: 'master'
env:
   MAVEN_OPTS: -Xmx1g
jobs:
   build:
      runs-on: ubuntu-latest
      steps:
      -  uses: actions/checkout@v2
      -  name: Set up JDK 1.8
         uses: actions/setup-java@v1
         with:
            java-version: 1.8
      -  name: Cache Maven packages
         uses: actions/cache@v2
         with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v14
        with:
           repositories: '[{ "id": "repository.spring.milestone", "url": "https://repo.spring.io/milestone" }]'
      -  name: Cache embedded cassandra
         uses: actions/cache@v2
         with:
            path: ~/.embedded-cassandra
            key: ${{ runner.os }}-embedded-cassandra-${{ hashFiles('**/CHANGES.txt') }}
            restore-keys: ${{ runner.os }}-embedded-cassandra
      - name: Checkout exemple service
        uses: actions/checkout@v2
        with:
            path: exemple-service
            repository: doudouchat/exemple-service
            ref: ${{ github.event.inputs.branch_service }}
      -  name: Build exemple service
         run: mvn -f ${{ github.workspace }}/exemple-service clean install -Dmaven.test.skip=true
      -  name: Build exemple service source
         run: mvn -f ${{ github.workspace }}/exemple-service source:aggregate install:install-file -Dfile=${{ github.workspace }}/exemple-service/target/exemple-service-2.0.0-SNAPSHOT-sources.jar -DgroupId=exemple -DartifactId=exemple-service -Dpackaging=jar -Dversion=2.0.0-SNAPSHOT -Dclassifier=sources
      - name: Checkout exemple authorization
        uses: actions/checkout@v2
        with:
            path: exemple-authorization
            repository: doudouchat/exemple-authorization
            ref: ${{ github.event.inputs.branch_authorization }}
      -  name: Build exemple authorization
         run: mvn -f ${{ github.workspace }}/exemple-authorization clean install -Dmaven.test.skip=true
      -  name: Build exemple authorization source
         run: mvn -f ${{ github.workspace }}/exemple-authorization source:aggregate install:install-file -Dfile=${{ github.workspace }}/exemple-authorization/target/exemple-authorization-1.0.1-SNAPSHOT-sources.jar -DgroupId=exemple -DartifactId=exemple-authorization -Dpackaging=jar -Dversion=1.0.1-SNAPSHOT -Dclassifier=sources
      -  name: Build with Maven
         run: mvn clean verify -Pwebservice,it,report
      -  name: display logs cargo
         if: ${{ failure() }}
         run: cat target/cargo/configurations/tomcat9x/logs/container.log
      -  name: Coveralls Maven plugin
         env:
           CI_NAME: Github
           CI_BUILD_NUMBER: ${{ github.run_id }}
           CI_BUILD_URL: https://github.com/${{ github.repository }}/commit/${{ github.event.after }}/checks
           CI_BRANCH: ${{ steps.refs.outputs.branch_name }}
           CI_PULL_REQUEST: ${{ steps.refs.outputs.pr_number }}
         run: mvn coveralls:report --no-transfer-progress -DrepoToken=${{ secrets.COVERALLS_TOKEN }}